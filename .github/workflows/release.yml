name: Release with GitHub CLI

on:
  workflow_dispatch:  # Allows manual triggering
  push:
    tags:
      - "v*"  # Triggers when a tag starting with "v" is pushed

# Add permissions section here
permissions:
  contents: write  # This gives permission to create releases and upload assets

jobs:
  release:
    runs-on: windows-latest
    steps:
      # 1. Checkout your repository
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Verify GitHub CLI is available (optional)
      - name: Check GitHub CLI version
        run: gh --version
        shell: pwsh

      # 3. Build your Rust project for Windows (MSVC target)
      - name: Build binary
        run: cargo build --release --target=x86_64-pc-windows-msvc
        shell: pwsh

      # 4. Package your binary into a zip file using PowerShell
      - name: Package binary
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release
          Copy-Item -Path "target/x86_64-pc-windows-msvc/release/Rusty-Analyser.exe" -Destination release/
          Compress-Archive -Path "release\Rusty-Analyser.exe" -DestinationPath "release\Rusty-Analyser.zip" -Force

      # 5. Use local release notes file and create release
      - name: Create Release with Local Notes File
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          # Only create a release if we're triggered by a tag
          if ($env:GITHUB_REF.StartsWith('refs/tags/')) {
            $tagName = $env:GITHUB_REF.Substring(10)  # Remove 'refs/tags/' prefix
            $previousTag = $(gh api repos/${{ github.repository }}/tags --jq '.[1].name' 2>$null)
          
            # Define possible locations for your release notes file (lol)
            $possiblePaths = @(
              "RELEASE_NOTES.md",                 # Root directory
              "docs/RELEASE_NOTES.md",            # Docs folder
              ".github/RELEASE_NOTES.md",         # GitHub folder
              "resources/RELEASE_NOTES.md"        # Resources folder
            )
          
            # Try to find the notes file
            $notesFile = $null
            foreach ($path in $possiblePaths) {
              if (Test-Path -Path $path) {
                $notesFile = $path
                break
              }
            }
          
            # Check if your release notes file was found
            if ($notesFile) {
              Write-Host "Found release notes file: $notesFile"
          
              # Get the content of the release notes file
              $notesContent = Get-Content -Path $notesFile -Raw
          
              # Add the full changelog link in the exact format requested
              if ($previousTag) {
                $changelogLink = "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$previousTag...$tagName"
          
                # Create a temporary file with both the notes and the changelog link
                $tempNotesFile = "TEMP_NOTES.md"
                $notesContent | Out-File -Path $tempNotesFile
                "`n`n$changelogLink" | Add-Content -Path $tempNotesFile
          
                # Display generated notes
                Write-Host "Release notes content:"
                Get-Content -Path $tempNotesFile
          
                # Create the release with the notes
                gh release create "$tagName" "release\Rusty-Analyser.zip" `
                  --title "$tagName" `
                  --notes-file $tempNotesFile
              } else {
                # If no previous tag, just use the notes file as is
                gh release create "$tagName" "release\Rusty-Analyser.zip" `
                  --title "$tagName" `
                  --notes-file $notesFile
              }
            } else {
              Write-Host "Warning: Release notes file not found at $notesFile"
              Write-Host "Creating release with basic notes"
          
              # Create a basic notes file if yours doesn't exist
              $basicNotesFile = "BASIC_NOTES.md"
              "Release $tagName" | Out-File -Path $basicNotesFile
          
              if ($previousTag) {
                "`n`n**Full Changelog**: https://github.com/${{ github.repository }}/compare/$previousTag...$tagName" | 
                  Add-Content -Path $basicNotesFile
              }
          
              # Create the release with basic notes
              gh release create "$tagName" "release\Rusty-Analyser.zip" `
                --title "$tagName" `
                --notes-file $basicNotesFile
            }
          } else {
            Write-Host "Not a tag push, skipping release creation."
          }