name: Release with GitHub CLI

on:
  workflow_dispatch:  # Allows manual triggering
  push:
    tags:
      - "v*"  # Triggers when a tag starting with "v" is pushed

# Add permissions section here
permissions:
  contents: write  # This gives permission to create releases and upload assets

jobs:
  release:
    runs-on: windows-latest
    steps:
      # 1. Checkout your repository
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Verify GitHub CLI is available (optional)
      - name: Check GitHub CLI version
        run: gh --version
        shell: pwsh

      # 3. Build your Rust project for Windows (MSVC target)
      - name: Build binary
        run: cargo build --release --target=x86_64-pc-windows-msvc
        shell: pwsh

      # 4. Package your binary into a zip file using PowerShell
      - name: Package binary
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release
          Copy-Item -Path "target/x86_64-pc-windows-msvc/release/Rusty-Analyser.exe" -Destination release/
          Compress-Archive -Path "release\Rusty-Analyser.exe" -DestinationPath "release\Rusty-Analyser.zip" -Force

      # 5. Create a GitHub release and upload the asset using GitHub CLI
      - name: Create Release and Upload Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          # Only create a release if we're triggered by a tag
          if ($env:GITHUB_REF.StartsWith('refs/tags/')) {
            $tagName = $env:GITHUB_REF.Substring(10)  # Remove 'refs/tags/' prefix
            gh release create "$tagName" "release\Rusty-Analyser.zip" `
              --title "Release $tagName" `
              --notes "Automated release for tag $tagName"
          } else {
            Write-Host "Not a tag push, skipping release creation."
          }